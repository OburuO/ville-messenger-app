# nginx/default.conf

# Main HTTPS/HTTP Server (Production-like) 
server {
    listen 80;
    listen 443 ssl http2;
    
    server_name localhost ville.local;
    root /var/www/public;
    index index.php index.html; 
    
    # SSL Configuration (for development - use self-signed certs)
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Security headers - UPDATED CSP to include WebSocket support
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; connect-src 'self' http: https: ws: wss:;" always;
    
    # Client settings
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Main location - proxy to Varnish
    location / {
        # Try static files first, then proxy to Varnish
        try_files $uri @varnish;
    }
    
    # Proxy to Varnish cache
    location @varnish {
        proxy_pass http://varnish;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Static files optimization
    location ~* \.(css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        access_log off;
        
        # Try files first, then proxy to Varnish
        try_files $uri @varnish;
    }
    
    # Security - deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(vendor|storage|bootstrap\/cache) { 
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Direct PHP Server (bypasses Varnish for testing)
server {
    listen 8080;
    server_name localhost;
    root /var/www/public;
    index index.php index.html;
    
    access_log /var/log/nginx/php_access.log;
    error_log /var/log/nginx/php_error.log;
    
    client_max_body_size 100M;
    
    # Updated CSP for direct PHP server too
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; connect-src 'self' http: https: ws: wss:;" always;
    
    # PHP handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Additional FastCGI parameters
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        
        # Buffer settings
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
    }
    
    # Laravel URL rewriting
    location / {
        try_files $  $uri/ /index.php?$query_string;
    }
    
    # Static files
    location ~* \.(css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ { 
        expires 1h;
        add_header Cache-Control "public";
        access_log off;
    }
}

# Laravel Reverb WebSocket Proxy
server {
    listen 8081 ssl http2;
    server_name localhost;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    access_log /var/log/nginx/reverb_access.log;
    error_log /var/log/nginx/reverb_error.log;
    
    # WebSocket proxy configuration
    location / {
        proxy_pass http://reverb:8082;
        proxy_http_version 1.1;
        
        # WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Standard proxy headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
        
        # Disable buffering for WebSocket
        proxy_buffering off;
        proxy_cache off;
    }
}